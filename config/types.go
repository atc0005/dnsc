// Copyright 2020 Adam Chalkley
//
// https://github.com/atc0005/dnsc
//
// Licensed under the MIT License. See LICENSE file in the project root for
// full license information.

type Config struct {
	// Use our template, define distinct collections of configuration settings
	// TODO: I do not know whether struct tags are needed (or even allowed)
	// here for embedded structs.
	cliConfig  configTemplate
	fileConfig configTemplate

	flagParser *arg.Parser `toml:"-" arg:"-"`
}

// DNS is a collection of DNS-related settings provided via CLI and config
// file sources.
type DNS struct {
	Servers []string `toml:"servers" arg:"" help:"The comma or space-separated list of DNS servers to submit query against."`
}

// Logging is a collection of logging-related settings provided via CLI and
// config file sources.
type Logging struct {
	// Level is the chosen logging level
	Level *string `toml:"level" arg:"--log-level,env:DNSC_LOG_LEVEL" help:"Log message priority filter. Log messages with a lower level are ignored."`

	// Output is one of the standard application outputs, stdout or stderr
	Output *string `toml:"output" arg:"--log-output,env:DNSC_LOG_OUTPUT" help:"Log messages are written to this output target."`

	// LogFormat controls which output format is used for log messages
	// generated by this application. This value is from a smaller subset
	// of the formats supported by the third-party leveled-logging package
	// used by this application.
	Format *string `toml:"format" arg:"--log-format,env:DNSC_LOG_FORMAT" help:"Log messages are written in this format."`
}

// configTemplate is our base configuration template used to collect values
// specified by various configuration sources. This template struct is
// embedded within the main Config struct once for each config source.
type configTemplate struct {

	// Embed other structs referenced directly by TOML config file here.
	// Provide an explicit name in an effort to setup "namespacing" as a
	// logical arrangement.
	DNS
	Logging

	// ConfigFile represents the fully-qualified path to a configuration file
	// consulted for settings not provided via CLI flags
	ConfigFile *string `toml:"-" arg:"--config-file,env:DNSC_CONFIG_FILE" help:"Full path to optional TOML-formatted configuration file. See config.example.toml for a starter template."`
}

